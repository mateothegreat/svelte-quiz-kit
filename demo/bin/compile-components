#!/usr/bin/env node

import esbuild from "esbuild";
import esbuildSvelte from "esbuild-svelte";
import { sveltePreprocess } from "svelte-preprocess";

console.log("Discovering components via ./shared-components/**/entry.ts");

import { glob } from "glob";

const entries = glob.sync("./shared-components/**/entry.ts");
for (const entry of entries) {
  console.log(`+ Discovered component entrypoint: ${entry}`);
}

bundleSvelte(entries);

async function bundleSvelte(entry) {
  console.log(`\nCompiling (${entry.length}) component${entry.length > 1 ? "s" : ""}...`);
  const build = await esbuild.build({
    logLevel: "debug",
    entryPoints: Array.isArray(entry) ? entry : [entry],
    target: "esnext",
    format: "esm",
    splitting: false,
    packages: "external",
    banner: {
      js: "// I'm compiled from entry.ts which imports simple.svelte using esbuild-svelte."
    },
    bundle: true,
    outdir: "./public",
    plugins: [
      esbuildSvelte({
        preprocess: sveltePreprocess(),
        css: true,
        compilerOptions: {
          css: "injected",
          preserveComments: true,
          preserveWhitespace: true
        }
      })
    ]
  });

  return build.outputFiles;
}
